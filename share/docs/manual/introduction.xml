<?xml version="1.0"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
	"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">

<chapter id="introduction">
	<title>Introduction</title>
	<para>
		Web:Extend is an open source PHP5 framework focused on ease of use and efficiency. It is licensed under the LGPL.
		The main contributor of the project is the company <ulink url="http://dev-extend.eu">Dev:Extend</ulink>.
	</para>

	<sect1 id="introduction_philosophy">
		<title>Philosophy</title>
		<para>
			The development team tries to adhere to the following philosophy whenever possible.
		</para>

		<sect2>
			<title>Simplicity</title>
			<para>
				<ulink url="http://en.wikipedia.org/wiki/Simplicity">Simplicity</ulink> is the property,
				condition, or quality of being straightforward or uncomplicated. In some circumstances it 
				denotes beauty,	purity or clarity. Simple things are usually easier to explain and understand 
				than complicated ones, and can indicate freedom from hardship, effort or confusion.
			</para>
			<para>
				In context, a developer using Web:Extend should be able to translate any project
				requirements into a finished application with minimal planning and implementation.
				Ideally, the developer should not have to focus on anything other than the requirements themselves.
				The tools available should be easy to use and understand, and should also present as few 
				disruptions as possible in the implemtation of any task.
			</para>
		</sect2>

		<sect2>
			<title>Small and efficient framework</title>
			<sect3>
				<title>Passive View MVC</title>
				<para>
                    The framework provides a method of using a variation of the MVC (Model-View-Controller) pattern.
                    This variant is explained in detail by <ulink url="http://martinfowler.com">Martin Fowler</ulink>
                    in his <ulink url="http://martinfowler.com/eaaDev/PassiveScreen.html">Passive View article</ulink>.
                    It is designed to enhance testability, but it also provides a much simpler approach to MVC.
                    The Passive View receives data from the controller and from this renders the page. No further
                    action is carried out by the Passive View, as further access to the model or the controller 
					is deemed to be unnecessary. Further information regarding this structure is available in 
					<xref linkend="mod_app_mvc"/>.
				</para>
			</sect3>
			<sect3>
				<title>Minimal Interface</title>
				<para>
					The framework is designed using the 
					<ulink url="http://martinfowler.com/bliki/MinimalInterface.html">Minimal Interface</ulink> 
					style, which means classes only have methods that are strictly necessary for 
					their function. This allows a developer to become familiar with the framework with relative ease as 
					all classes involved are small and concise. On occasion there will be methods included 
					for convenience when a noticeable pattern in class usage is observed.
				</para>
			</sect3>
			<sect3>
				<title>Write less but better code</title>
				<para>
					By keeping things simple, the framework assists in the creation of better code.
					A developer should be able to create an application with very few lines of code without the 
					need to handle technicalities. The intention of this framework is to carry out the coding 
					details	on behalf of the developer.
				</para>
			</sect3>
			<sect3>
				<title>Automating security where possible</title>
				<para>
					A developer should not be concerned with security where it is more suitable for 
					the framework to ensure that an application is as free from vunerabilities as possible.	
					This can be enforced with the provision of various checks and security measures
					inside the framework, along with a set of recommendations of coding practices for the 
					developer. The documentation also includes information on the various security issues that can 
					arise within applications.
				</para>
			</sect3>
			<sect3>
				<title>Loose coupling</title>
				<para>
					Each module of the framework is loosely coupled, which means a given module can 
					be used without requiring any other. 
					For example, if the MVC architecture is not desired it can be ignored. 
					The database can be accessed directly rather than via models, 
					or scripts can be created using only the database and mail modules 
					to send data via email to all system users. 
					The code can be use freely as required, without any restrictions. 
					And if it emerges that this is not possible for some reason, this can be reported 
					as a bug.
				</para>
			</sect3>
			<sect3>
				<title>No bloat</title>
				<para>
					Bloat is not exactly the opposite of simplicity, but it's certainly
					one of the causes leading to complexity in a lot of softwares.
					We think bloat is bad. Bloat can happen for various reasons:
						following trends to look cool,
						focusing on adding features for only a small subset of users,
						generating code automatically,
						adding features already available by other means,
						etc.
					That's something we can promise to never do.
					You might think generating code is a good thing,
					well maybe it is, but we think we have a better solution.
					And for everything else, there will be plugins.
				</para>
			</sect3>
		</sect2>

		<sect2>
			<title>Developers, developers, developers</title>
			<para>
				We think the developers (the users of our product) are the most important people in the world.
				Therefore we always listen carefully to their inputs and provide help whenever possible.
				You can find help by contacting us directly, through a mailing list, IRC,
				but also by opening tickets asking for more documentation or tutorials.
			</para>
			<para>
				We also need your help.
				Please forward us comments or suggestions so we can improve the product.
				We are listening.
			</para>
		</sect2>
	</sect1>

	<sect1 id="introduction_goals">
		<title>Goals</title>
		<para>
			Web:Extend was officially created in 2006.
			Work began in 2005 on various modules that would lead to the creation of the framework.
			The goal at the time was to make a form generator to simplify form handling and validation.
			This form generator was rewritten 3 times up to this day,
			leading to the current implementation that uses XSL stylesheets to transform an XML into HTML,
			along with <ulink url="http://php.net/simplexml">SimpleXML</ulink> for manipulation and validation.
		</para>
		<para>
			Web:Extend was created because no framework used all the power of PHP5 at the time.
			We believe it's still true today. Most of the power of PHP5 comes from the
			<ulink url="http://php.net/spl">SPL</ulink> and from the SimpleXML extensions.
			Interfaces like <ulink url="http://php.net/iterator">Iterator</ulink> or
			<ulink url="http://php.net/arrayaccess">ArrayAccess</ulink> simplify everything.
			That's why we use them everywhere it makes sense to.
		</para>
		<para>
			The current goals are:
			<itemizedlist>
				<listitem><para>To provide a simple, consistent but also powerful API for common operations</para></listitem>
				<listitem><para>To reduce the development times using the framework</para></listitem>
				<listitem><para>To build a high-performance application framework</para></listitem>
				<listitem><para>To allow extensibility through a simple-to-use plugin system</para></listitem>
				<listitem><para>To enhance security through the inclusion of automated prevention mechanisms</para></listitem>
				<listitem><para>To write great resources around it including documentation and tutorials</para></listitem>
			</itemizedlist>
		</para>
	</sect1>
</chapter>
